Distributed under the MIT License.
See LICENSE.txt for details.
This patch is currently unused because we have disabled charm inlining due to a
Charm bug that causes inlined functions to not be instrumented for communication
aware load balancers.
This file should be renamed to `AlgorithmArray.def.h.patch` when re-enabling
charm inlining, once the bug fix is applied to charm and we update to the
appropriately fixed version.
--- AlgorithmArray.def.h	2021-04-01 14:42:23.928094971 -0700
+++ alterations/AlgorithmArray.def.h	2021-04-01 14:44:19.599096051 -0700
@@ -310,7 +310,7 @@
 {
   ckCheck();
   AlgorithmArray <ParallelComponent, SpectreArrayIndex>  *obj = ckLocal();
-  if (obj) {
+  if (obj != nullptr and not Parallel::detail::max_inline_entry_methods_reached()) {
     _TRACE_BEGIN_EXECUTE_DETAILED(0,ForArrayEltMsg,(CkIndex_AlgorithmArray <ParallelComponent, SpectreArrayIndex> ::template idx_simple_action_marshall2<Action, Args...>()),CkMyPe(), 0, ((CkArrayIndex&)ckGetIndex()).getProjectionID(), obj);
 #if CMK_LBDB_ON
     LDObjHandle objHandle;
@@ -360,7 +360,7 @@
 {
   ckCheck();
   AlgorithmArray <ParallelComponent, SpectreArrayIndex>  *obj = ckLocal();
-  if (obj) {
+  if (obj != nullptr and not Parallel::detail::max_inline_entry_methods_reached()) {
     _TRACE_BEGIN_EXECUTE_DETAILED(0,ForArrayEltMsg,(CkIndex_AlgorithmArray <ParallelComponent, SpectreArrayIndex> ::template idx_simple_action_void<Action>()),CkMyPe(), 0, ((CkArrayIndex&)ckGetIndex()).getProjectionID(), obj);
 #if CMK_LBDB_ON
     LDObjHandle objHandle;
@@ -442,7 +442,7 @@
 {
   ckCheck();
   AlgorithmArray <ParallelComponent, SpectreArrayIndex>  *obj = ckLocal();
-  if (obj) {
+  if (obj != nullptr and not Parallel::detail::max_inline_entry_methods_reached()) {
     _TRACE_BEGIN_EXECUTE_DETAILED(0,ForArrayEltMsg,(CkIndex_AlgorithmArray <ParallelComponent, SpectreArrayIndex> ::idx_perform_algorithm_void()),CkMyPe(), 0, ((CkArrayIndex&)ckGetIndex()).getProjectionID(), obj);
 #if CMK_LBDB_ON
     LDObjHandle objHandle;
@@ -479,7 +479,7 @@
 {
   ckCheck();
   AlgorithmArray <ParallelComponent, SpectreArrayIndex>  *obj = ckLocal();
-  if (obj) {
+  if (obj != nullptr and not Parallel::detail::max_inline_entry_methods_reached()) {
     _TRACE_BEGIN_EXECUTE_DETAILED(0,ForArrayEltMsg,(CkIndex_AlgorithmArray <ParallelComponent, SpectreArrayIndex> ::idx_perform_algorithm_marshall6()),CkMyPe(), 0, ((CkArrayIndex&)ckGetIndex()).getProjectionID(), obj);
 #if CMK_LBDB_ON
     LDObjHandle objHandle;
@@ -557,7 +557,7 @@
 {
   ckCheck();
   AlgorithmArray <ParallelComponent, SpectreArrayIndex>  *obj = ckLocal();
-  if (obj) {
+  if (obj != nullptr and not Parallel::detail::max_inline_entry_methods_reached()) {
     _TRACE_BEGIN_EXECUTE_DETAILED(0,ForArrayEltMsg,(CkIndex_AlgorithmArray <ParallelComponent, SpectreArrayIndex> ::template idx_receive_data_marshall8<ReceiveTag, ReceiveData_t>()),CkMyPe(), 0, ((CkArrayIndex&)ckGetIndex()).getProjectionID(), obj);
 #if CMK_LBDB_ON
     LDObjHandle objHandle;
